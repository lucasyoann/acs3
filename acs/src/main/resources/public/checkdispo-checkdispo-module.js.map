{"version":3,"sources":["webpack:///./app/checkdispo/checkdispo-routing.module.ts","webpack:///./app/checkdispo/checkdispo.component.ts","webpack:///./app/checkdispo/checkdispo.module.ts"],"names":[],"mappings":"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","file":"checkdispo-checkdispo-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { CheckDispoComponent } from './checkdispo.component';\r\nimport { RouteGuard } from '../auth/route.guard';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: CheckDispoComponent,\r\n        canActivate: [RouteGuard],\r\n        data: {\r\n            title: 'Module myProfile'\r\n        }\r\n    }];\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forChild(routes)\r\n    ],\r\n    exports: [RouterModule]\r\n})\r\nexport class CheckDispoRoutingModule { }","import {Component, ElementRef, OnInit, ViewChild, ViewEncapsulation, SimpleChanges } from \"@angular/core\";\r\nimport { MatDialogRef, MAT_DIALOG_DATA, MAT_DATE_LOCALE, DateAdapter, MAT_DATE_FORMATS } from '@angular/material';\r\nimport { ReservationService } from '../reservation/reservation.service';\r\nimport { MatDialog } from '@angular/material';\r\nimport { Reservation } from \"src/main/webapp/app/shared/reservation/reservation.entity\";\r\nimport { DatePipe } from '@angular/common';\r\nimport { TokenStorageService } from '../auth/token-storage.service';\r\nimport {UserService} from '../user/user.service';\r\nimport {UserFonctionnel} from '../shared/user/userFonctionnel.entity';\r\nimport { ArticleDispo } from '../shared/reservation/articleDispo.entity';\r\nimport {MatSort, MatTableDataSource} from '@angular/material';\r\nimport {Sort} from '@angular/material';\r\n\r\n@Component( {\r\n    encapsulation: ViewEncapsulation.None,\r\n    selector: 'app-checkdispo',\r\n    template: `<ngb-alert *ngIf=\"searchFailed\">\r\n        {{message}}\r\n  </ngb-alert>\r\n<div style=\"background-color:white;border-radius:5px;margin:15px 0;\">\r\n    <h2 mat-dialog-title class=\"color-bleu\" style=\"margin:10px 20px;padding-top:10px\">V&eacute;rification des disponibilit&eacute;s</h2>\r\n    <div class=\"row\" style=\"justify-content:flex-start; align-items:center\">\r\n        <mat-form-field style=\"margin-right:20px; margin-left:20px;\">\r\n            <input matInput [matDatepicker]=\"dateDebut\" required placeholder=\"Date de d&eacute;but\" [(ngModel)] = \"dateDebutText\">\r\n            <mat-datepicker-toggle matSuffix [for]=\"dateDebut\"></mat-datepicker-toggle>\r\n                <mat-datepicker #dateDebut></mat-datepicker>\r\n        </mat-form-field>\r\n        <mat-form-field style=\"margin-left:20px; margin-right:20px;\">\r\n            <input matInput [matDatepicker]=\"dateFin\" required placeholder=\"Date de fin\" [(ngModel)] = \"dateFinText\">\r\n            <mat-datepicker-toggle matSuffix [for]=\"dateFin\"></mat-datepicker-toggle>\r\n                <mat-datepicker #dateFin [startAt]=\"dateDebutText\">></mat-datepicker>\r\n        </mat-form-field>\r\n        <mat-checkbox style=\"margin-left:20px; margin-right:20px;\" color=\"warn\" [(ngModel)] = \"asso\">Association</mat-checkbox>\r\n        <mat-dialog-actions style=\"margin-left:20px; margin-right:20px;\">\r\n            <button type=\"button\" class=\"btn btn-success\" (click)=\"rechercherDisponibilite()\">Rechercher</button>\r\n        </mat-dialog-actions>\r\n    </div>\r\n    <table  *ngIf=\"listArticlesDispo && listArticlesDispo.length>0\" mat-table [dataSource]=\"listArticlesDispo\" matSort (matSortChange)=\"sortData($event)\" style=\"width:100%; border-top:1px solid rgba(0, 0, 0, 0.1)\">\r\n\r\n    <!--- Note that these columns can be defined in any order.\r\n        The actual rendered columns are set as a property on the row definition\" -->\r\n    <ng-container matColumnDef=\"type\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header=\"type\"> Type </th>\r\n        <td mat-cell *matCellDef=\"let element\"> {{element.type}} </td>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"description\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header=\"description\"> Description </th>\r\n        <td mat-cell *matCellDef=\"let element\"> {{element.description}} </td>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"quantite\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header=\"quantite\"> Quantit&eacute; disponible </th>\r\n        <td mat-cell *matCellDef=\"let element\"> {{element.quantiteMax}} </td>\r\n    </ng-container>\r\n\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n    </table>\r\n</div>`\r\n} )\r\nexport class CheckDispoComponent implements OnInit {\r\n \r\n    dateDebutText : Date;\r\n    dateFinText : Date;\r\n    searchFailed : boolean = false;\r\n    message:string;\r\n    listArticlesDispo : ArticleDispo[];\r\n    displayedColumns: string[] = ['type', 'description', 'quantite'];\r\n    asso :boolean = false;\r\n    \r\n    constructor(public dialog: MatDialog, private reservationService:ReservationService, public datepipe: DatePipe,\r\n            private adapter: DateAdapter<any>, private token : TokenStorageService,private userService: UserService){}\r\n       \r\n    ngOnInit() { \r\n        this.adapter.setLocale('fr');\r\n        this.searchFailed=false;\r\n    }\r\n    \r\n    rechercherDisponibilite(){\r\n        if( this.dateDebutText && this.dateFinText){\r\n            if(this.dateDebutText>this.dateFinText){\r\n                this.searchFailed=true;\r\n                this.message=\"Veuillez choisir une date de fin supérieure à la date de début de la réservation\";\r\n            }else{\r\n                this.searchFailed=false;\r\n                const dateDFormat = (this.datepipe.transform(this.dateDebutText, 'dd/MM/yyyy'));\r\n                const dateFFormat = (this.datepipe.transform(this.dateFinText, 'dd/MM/yyyy'));\r\n                this.reservationService.getArticlesDispo( dateDFormat, dateFFormat,this.asso).subscribe(\r\n                        data =>{\r\n                            this.listArticlesDispo=data;\r\n                            this.searchFailed=false;\r\n                        },\r\n                        error =>{\r\n                            this.searchFailed=true;\r\n                            this.message = \"Erreur de récupération des articles disponibles pour cette période\";\r\n                        }\r\n\r\n                    ); \r\n                   \r\n            }\r\n            \r\n        }else{\r\n            this.searchFailed=true\r\n            this.message=\"Veuillez rentrer une date de début et une date de fin de réservation\"\r\n        }   \r\n    }\r\n    \r\n    sortData(sort: Sort) {\r\n        \r\n        const data = this.listArticlesDispo.slice();\r\n        if (!sort.active || sort.direction === '') {\r\n          this.listArticlesDispo = data;\r\n          return;\r\n        }\r\n\r\n        this.listArticlesDispo = data.sort((a, b) => {\r\n          const isAsc = sort.direction === 'asc';\r\n          switch (sort.active) {\r\n            case 'type': return compare(a.type, b.type, isAsc);\r\n            case 'description': return compare(a.description, b.description, isAsc);\r\n            case 'quantite': return compare(a.quantiteMax, b.quantiteMax, isAsc);\r\n            default: return 0;\r\n          }\r\n        });\r\n      }\r\n    \r\n}\r\n\r\nfunction compare(a: number | string, b: number | string, isAsc: boolean) {\r\n    return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\r\n  }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Component } from '@angular/core';\r\n\r\nimport { CheckDispoComponent } from './checkdispo.component';\r\nimport { CheckDispoRoutingModule } from './checkdispo-routing.module';\r\nimport { MatDialogModule, MatFormFieldModule, MatNativeDateModule, MatInputModule,MatCheckboxModule, MatSelectModule } from '@angular/material';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { UserService } from '../user/user.service';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {MatSortModule} from '@angular/material/sort';\r\n\r\nimport { Http } from '@angular/http';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { httpInterceptorProviders } from 'src/main/webapp/app/auth/auth-interceptor';\r\n@NgModule({\r\n    imports: [\r\n      CommonModule,\r\n      FormsModule,\r\n      HttpClientModule,\r\n      CheckDispoRoutingModule,\r\n      MatCardModule,\r\n      MatDialogModule,\r\n      MatFormFieldModule,\r\n      MatNativeDateModule,\r\n      MatInputModule, \r\n      MatCheckboxModule,\r\n      MatSelectModule,\r\n      NgbModule,\r\n      MatDatepickerModule,\r\n      MatTableModule,\r\n      MatSortModule\r\n    ],\r\n    declarations:[CheckDispoComponent],\r\n    entryComponents:[],\r\n    providers: [Http, httpInterceptorProviders, UserService]\r\n})\r\n\r\nexport class CheckDispoModule{}"],"sourceRoot":""}