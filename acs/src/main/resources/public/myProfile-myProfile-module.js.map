{"version":3,"sources":["webpack:///./app/myProfile/myProfile-routing.module.ts","webpack:///./app/myProfile/myProfile.component.ts","webpack:///./app/myProfile/myProfile.module.ts"],"names":[],"mappings":"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","file":"myProfile-myProfile-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { MyProfileComponent } from './myProfile.component';\r\nimport { RouteGuard } from '../auth/route.guard';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: MyProfileComponent,\r\n        canActivate: [RouteGuard],\r\n        data: {\r\n            title: 'Module myProfile'\r\n        }\r\n    }];\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forChild(routes)\r\n    ],\r\n    exports: [RouterModule]\r\n})\r\nexport class MyProfileRoutingModule { }","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA, MAT_DATE_LOCALE, DateAdapter, MAT_DATE_FORMATS } from '@angular/material';\r\nimport {FormControl} from '@angular/forms';\r\nimport {NgbAlertConfig} from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { TokenStorageService } from '../auth/token-storage.service';\r\nimport {UserService} from '../user/user.service';\r\nimport {UserFonctionnel} from '../shared/user/userFonctionnel.entity';\r\nimport{User} from '../shared/user/user.entity';\r\n@Component({\r\n    encapsulation: ViewEncapsulation.None,\r\n    selector: 'app-myProfile',\r\n    template:`<ngb-alert *ngIf=\"saveFailed\">\r\n        {{message}}\r\n  </ngb-alert>\r\n<ngb-alert [type]=\"'success'\" *ngIf=\"saveSuccess\">\r\n        Mot de passe modifi&eacute; avec succ&egrave;s\r\n  </ngb-alert>\r\n<form (ngSubmit)=\"save()\" ngNativeValidate>\r\n    <div style=\"display:flex; margin : 10px;\">\r\n        <mat-card style=\"width:550px\">\r\n            <mat-card-header style=\"width:100%; display: flex; align-items:center;\">\r\n                <div mat-card-avatar><i class=\"fas fa-user\" style=\"font-size:40px\"></i></div>\r\n                <mat-card-title>{{user.username}}</mat-card-title>\r\n                <mat-card-subtitle style=\"margin:0\" *ngIf=\"user.administrateur && user.superAdministrateur\">Super Administrateur</mat-card-subtitle>\r\n                <mat-card-subtitle style=\"margin:0\" *ngIf=\"user.administrateur && !user.superAdministrateur\">Administrateur</mat-card-subtitle>\r\n                <mat-card-subtitle style=\"margin:0\" *ngIf=\"!user.administrateur && !user.superAdministrateur\">Utilisateur</mat-card-subtitle>\r\n            </mat-card-header>\r\n            <mat-card-content style=\"display:flex; flex-direction:column; margin-top:10px;\">\r\n                <mat-form-field>\r\n                    <input matInput required placeholder=\"Ancien mot de passe\" type=\"password\" id=\"oldPassword\" name=\"oldPassword\" [(ngModel)] = \"oldPassword\">\r\n                </mat-form-field>\r\n                <mat-form-field>\r\n                    <input matInput required placeholder=\"Nouveau mot de passe\" type=\"password\" id=\"newPassword\" name=\"newPassword\" [(ngModel)] = \"newPassword\">\r\n                </mat-form-field>\r\n                <mat-form-field>\r\n                    <input matInput required placeholder=\"Confirmation du nouveau mot de passe\" type=\"password\" id=\"passwordConfirm\" name=\"passwordConfirm\" [(ngModel)] = \"passwordConfirm\">\r\n                </mat-form-field>\r\n            </mat-card-content>\r\n            <mat-card-actions>\r\n                <button type=\"submit\" style = \"margin: 0px;\" class=\"btn btn-success\">Modifier</button>\r\n            </mat-card-actions>\r\n        </mat-card>\r\n    </div>\r\n</form>`\r\n})\r\nexport class MyProfileComponent implements OnInit {\r\n    \r\n    username:string;\r\n    checked : boolean =false;\r\n    user : UserFonctionnel=new UserFonctionnel();\r\n    controlUser : User = new User();\r\n    controlledUser : User = new User();\r\n    role:string;\r\n    message : string;\r\n    saveFailed : boolean = false;\r\n    oldPassword : string;\r\n    newPassword : string;\r\n    passwordConfirm : string;\r\n    saveSuccess : boolean =false;\r\n    constructor(private token : TokenStorageService, private userService:UserService,\r\n            public alertConfig: NgbAlertConfig) { \r\n        alertConfig.type = 'danger';\r\n        alertConfig.dismissible = false;\r\n    }\r\n    \r\n    ngOnInit() {\r\n        \r\n        this.username=this.token.getUsername();\r\n        this.userService.getUser(this.username).subscribe(\r\n                data=>{\r\n                    this.user=data;\r\n                    this.user.administrateur=false;\r\n                    this.user.superAdministrateur =false;\r\n                    this.user.roles.forEach(function(role : string){\r\n                        if(role===\"ROLE_ADMIN\"){\r\n                            this.user.administrateur=true;\r\n                        }else if(role===\"ROLE_SUPER_ADMIN\"){\r\n                            this.user.superAdministrateur=true;\r\n                        }\r\n                    }.bind(this));  \r\n                },\r\n                error=>{\r\n                    this.message=\"Erreur de récupération de l'utilisateur\";\r\n                    this.saveFailed=true;\r\n                }\r\n        \r\n        );\r\n        \r\n        \r\n    }\r\n    \r\n    save(){\r\n        \r\n        this.controlUser.username=this.user.username;\r\n        this.controlUser.password = this.oldPassword;\r\n        this.userService.checkPassword(this.controlUser).subscribe(\r\n                data=>{\r\n                    this.checked=data;\r\n                    if(!this.checked){\r\n                        \r\n                        this.message=\"Ancien mot de passe incorrect\";\r\n                        this.saveFailed=true;\r\n                    }else{\r\n                        this.controlledUser.username=this.user.username;\r\n                        this.controlledUser.password=this.newPassword;\r\n                        if(this.newPassword===this.passwordConfirm){\r\n                            if(this.newPassword.length>=8){\r\n                                this.userService.changePassword(this.controlledUser).subscribe(\r\n                                        data=>{\r\n                                            this.saveSuccess=true;\r\n                                        },\r\n                                        error=>{\r\n                                            this.message=\"Erreur de changement de mot de passe\";\r\n                                            this.saveFailed=true;\r\n                                        }\r\n                                );\r\n                            } else{\r\n                                this.message=\"Au moins 8 caractères sont requis dans votre mot de passe\";\r\n                                this.saveFailed=true;\r\n                            }\r\n                        }else{\r\n                            this.message=\"Le mot de passe doit être égal au mot de passe de confirmation\";\r\n                            this.saveFailed=true;\r\n                        }\r\n                    }\r\n                },\r\n                error=>{\r\n                    this.message=\"Erreur de vérification du mot de passe\";\r\n                    this.saveFailed=true;\r\n                }\r\n                \r\n                );\r\n                \r\n    }\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Component } from '@angular/core';\r\n\r\nimport { MyProfileComponent } from './myProfile.component';\r\nimport { MyProfileRoutingModule } from './myProfile-routing.module';\r\nimport { MatDialogModule, MatFormFieldModule, MatNativeDateModule, MatInputModule,MatCheckboxModule, MatSelectModule } from '@angular/material';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { UserService } from '../user/user.service';\r\n\r\nimport { Http } from '@angular/http';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { httpInterceptorProviders } from 'src/main/webapp/app/auth/auth-interceptor';\r\n@NgModule({\r\n    imports: [\r\n      CommonModule,\r\n      FormsModule,\r\n      HttpClientModule,\r\n      MyProfileRoutingModule,\r\n      MatCardModule,\r\n      MatDialogModule,\r\n      MatFormFieldModule,\r\n      MatNativeDateModule,\r\n      MatInputModule, \r\n      MatCheckboxModule,\r\n      MatSelectModule,\r\n      NgbModule\r\n    ],\r\n    declarations:[MyProfileComponent],\r\n    entryComponents:[],\r\n    providers: [Http, httpInterceptorProviders, UserService]\r\n})\r\n\r\nexport class MyProfileModule{}"],"sourceRoot":""}